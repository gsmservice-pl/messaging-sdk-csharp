//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gsmservice.Gateway.Models.Components
{
    using Gsmservice.Gateway.Models.Components;
    using Gsmservice.Gateway.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// An object with a new SMS message properties
    /// </summary>
    public class SmsMessage
    {

        /// <summary>
        /// The recipient number or multiple recipients numbers of single message. To set one recipient, please use `Recipients.CreateStr()` method simply passing to it a `string` with his phone number. To set multiple recipients, please use `Recipients.CreateArrayOfStr()` method passing to it `List&lt;string&gt;`. Optionally you can also set custom id (user identifier) for each message - use `Recipients.CreatePhoneNumberWithCid()` method passing `PhoneNumberWithCid` object (in case of single recipient) or `Recipients.CreateArrayOfPhoneNumberWithCid()` method passing List&lt;PhoneNumberWithCid&gt; (in case of multiple recipients).
        /// </summary>
        [JsonProperty("recipients")]
        public Recipients Recipients { get; set; } = default!;

        /// <summary>
        /// SMS message content
        /// </summary>
        [JsonProperty("message")]
        public string Message { get; set; } = default!;

        /// <summary>
        /// SMS sender name
        /// </summary>
        [JsonProperty("sender")]
        public string? Sender { get; set; } = "Bramka SMS";

        /// <summary>
        /// SMS type (SmsType.SmsPro -&gt; SMS PRO, SmsType.SmsEco -&gt; SMS ECO, SmsType.SmsTwoWay -&gt; SMS 2WAY)
        /// </summary>
        [JsonProperty("type")]
        public SmsType? Type { get; set; } = Gsmservice.Gateway.Models.Components.SmsType.SmsPro;

        /// <summary>
        /// Should the message be sent with special characters, e.g. Polish diacritics (if any)? If *false*, those characters will be automatically replaced with their equivalents. If *true* your message will be sent as **unicode** but the message will be able to consist of fewer characters.
        /// </summary>
        [JsonProperty("unicode")]
        public bool? Unicode { get; set; } = false;

        /// <summary>
        /// Should the message to be sent with class 0 (FLASH)?
        /// </summary>
        [JsonProperty("flash")]
        public bool? Flash { get; set; } = false;

        /// <summary>
        /// Scheduled future date and time of sending the message (in ISO 8601 format). If missing or null - message will be sent immediately
        /// </summary>
        [JsonProperty("date")]
        public DateTime? Date { get; set; } = null;
    }
}