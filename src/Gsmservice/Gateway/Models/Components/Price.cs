//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gsmservice.Gateway.Models.Components
{
    using Gsmservice.Gateway.Models.Components;
    using Gsmservice.Gateway.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;
    
    /// <summary>
    /// An object with the properties and price of a single message
    /// </summary>
    public class Price
    {

        /// <summary>
        /// Information about a possible error
        /// </summary>
        [JsonProperty("error")]
        public string? Error { get; set; } = null;

        /// <summary>
        /// Custom message ID assigned by the User
        /// </summary>
        [JsonProperty("cid")]
        public string? Cid { get; set; } = null;

        /// <summary>
        /// Message type (SmsType.SmsPro -&gt; SMS PRO, SmsType.SmsEco -&gt; SMS ECO, SmsType.SmsTwoWay -&gt;SMS 2WAY, SmsType.Mms -&gt; MMS)
        /// </summary>
        [JsonProperty("type")]
        public MessageType? Type { get; set; }

        /// <summary>
        /// A telephone number in international format (with a plus sign and the country code at the beginning, e.g. +48 for Poland)
        /// </summary>
        [JsonProperty("recipient")]
        public string? Recipient { get; set; }

        /// <summary>
        /// Message sender name
        /// </summary>
        [JsonProperty("sender")]
        public string? Sender { get; set; } = null;

        /// <summary>
        /// The count of parts that message consists of
        /// </summary>
        [JsonProperty("parts")]
        public long? Parts { get; set; } = null;

        /// <summary>
        /// Did the message contain special characters, e.g. Polish diacritics?
        /// </summary>
        [JsonProperty("unicode")]
        public bool? Unicode { get; set; }

        /// <summary>
        /// Was the message sent with class 0 (FLASH)?
        /// </summary>
        [JsonProperty("flash")]
        public bool? Flash { get; set; }

        /// <summary>
        /// The price of message (in PLN)
        /// </summary>
        [JsonProperty("price")]
        public float? PriceValue { get; set; }
    }
}